import groovy.io.FileType

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/robfletcher/gradle-plugins' }
    }
    dependencies {
        classpath "org.gradle.plugins:gradle-compass:1.0.7"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'compass'
compass {
    cssDir = file('build/site/css')
    sassDir = file('src/main/sass')
}

/* These three tasks build our site */
task("generateSite", group: "Site Generator", dependsOn: "compileSass", description: "Outputs site to build directory") {
	doLast {
    	processFiles()
	}
}

task("preview", group: "Site Generator", dependsOn:"generateSite", description: "Opens site with Safari") {
	doLast {
    	"open -a safari file://${file("build/site").absolutePath}/index.html".execute()
	}
}

task("clean",  group: "Site Generator", description: "Deletes the generated site") {
	doLast {
    	file("build").deleteDir()
	}
}

/* Recurse through the src/main/content directory and run each file through Thymeleaf or just copy it */
def processFiles() {
    file("src/main/content").eachFileRecurse(FileType.FILES) { f ->
        copyFileWithoutProcessing(f)
    }
}

/* Copy a file to the build directory */
def copyFileWithoutProcessing(f) {
    println("Copying ${f} to build directory")
    createFileWithDirectories(f).bytes = f.bytes
}

/* Creates a file including any directories along the path which do not exist */
def createFileWithDirectories(f) {
    def filePath = f.absolutePath
    def relativePath = filePath.replace(file("src/main/content/").absolutePath, "")
    def newFile = file("build/site/${relativePath}")
    newFile.getParentFile().mkdirs()
    return newFile
}
